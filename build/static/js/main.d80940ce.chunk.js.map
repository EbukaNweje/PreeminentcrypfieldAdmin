{"version":3,"sources":["Updateuser/AdminLogin.js","Updateuser/Oldfile/UpdateuserStyle.js","Updateuser/Oldfile/Updateuser.js","App.js","reportWebVitals.js","index.js"],"names":["AdminLogin","navigate","useNavigate","useState","email","setEmail","password","setPassword","Container","Wrapper","Title","Form","InputHold","Label","Input","value","onChange","e","target","required","placeholder","Button","onClick","Swal","fire","icon","title","text","styled","button","div","form","input","From","TextDiv","InputData","UpdateWallet","Display","data","setData","last","setLast","console","log","useEffect","Axios","get","then","res","upddatebtn","id","a","inputLabel","inputValue","showCancelButton","inputValidator","totalDeposit","UpdateValues","finalData","sentApi","Object","values","myObject","lastDepositupdate","patch","map","props","fullName","_id","lastDeposit","lastWithdrawal","depositWalletbalance","interestWalletbalance","totalInvest","totalWithdraw","currentBalance","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d80940ce.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Swal from \"sweetalert2\"\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nconst AdminLogin = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n\r\n    const Loggin = () =>{\r\n    if(email !== \"premiumcryptassets@gmail.com\" || password !== \"premiumcryptassetsadmin@2023\"){\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: \"You are not an Admin\",\r\n         }) \r\n    }else{\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Success!',\r\n            text: \"Welcome back!\",\r\n         }) ;\r\n         navigate(\"/updateuser\")\r\n    }\r\n    }\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <Wrapper>\r\n            <Title>Admin Update</Title>\r\n            <Form>\r\n                <InputHold>\r\n                <Label>Admin Email</Label>\r\n                    <Input value={email} onChange={(e) =>{\r\n                        setEmail(e.target.value)\r\n                    }} required placeholder='Admin Email'/>\r\n                </InputHold>\r\n                <InputHold>\r\n                <Label>Admin Password</Label>\r\n                    <Input value={password} onChange={(e) => {\r\n                        setPassword(e.target.value)\r\n                    }} required placeholder='Admin password'/>\r\n                </InputHold>\r\n                <Button onClick={() => {\r\n                    Loggin()\r\n                }}>Login</Button>\r\n            </Form>\r\n        </Wrapper>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default AdminLogin;\r\n\r\n\r\nconst Button = styled.button`\r\nwidth: 30%;\r\nmargin-top: 1rem;\r\npadding: 0.7rem 0.3rem;\r\nborder: none;\r\nborder-radius: 0.4rem;\r\ncolor: #1B2537;\r\nfont-weight: bold;\r\nfont-size: 16px;\r\ntext-decoration: none; \r\nbackground-color: rgb(255, 255, 255);\r\ntext-align: center;\r\ncursor: pointer;\r\n/* border-radius: 0%.4rem; */\r\n`;\r\n\r\nconst Title = styled.div`\r\ncolor: rgb(255, 255, 255);\r\nfont-size: 30px;\r\nfont-family: sans-serif, monospace;\r\nfont-weight: bold;\r\nmargin-bottom: 1rem;\r\n`;\r\nconst Container = styled.div`\r\nwidth: 100%;\r\nheight: 100vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n/* position: relative; */\r\n/* z-index: -1; */\r\nbackground:linear-gradient(45deg,  #030e21cf, #031128a9);\r\nbackground-position: center;\r\nbackground-size: cover;\r\nbackground-repeat: no-repeat;\r\n\r\n@media Screen and (max-width: 768px){\r\n    width: 100%;\r\n}\r\n`;\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 80%;\r\n\r\n    @media Screen and (max-width: 768px){\r\n        /* width: 80% */\r\n    }\r\n`;\r\nconst Form = styled.form`\r\n background: #0F192C;\r\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.25);\r\n    width: 40%;\r\n    max-width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    /* padding: 30px 60px 50px 60px; */\r\n    opacity: 80%;\r\n    padding: 10px;\r\n    height: 60%;\r\n\r\n    @media Screen and (max-width: 768px){\r\n    height: 60%;\r\n    width: 90%\r\n    }\r\n\r\n`;\r\nconst InputHold = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin: 20px 0;\r\n`;\r\nconst Label = styled.div`\r\ncolor: rgb(255, 255, 255);\r\n    font-size: 14px;\r\n    font-family: sans-serif, monospace;\r\n    font-weight: 400;\r\n    line-height: 14px;\r\n    margin-bottom: 1%;\r\n`;\r\nconst Input = styled.input`\r\ncolor: black;\r\nborder-radius: 0.4rem;\r\nborder: none;\r\npadding: 1rem 0.3rem;\r\n`;\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: max-content;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 1px solid black;\r\n    width: max-content;\r\n    margin-bottom: 2%;\r\n    padding: 20px;\r\n`\r\n\r\nexport const From = styled.div`\r\n    margin-top: 3%;\r\n`\r\n\r\nexport const TextDiv = styled.div`\r\n    display: flex;\r\n\r\n    p{\r\n        margin-left: 5px;\r\n    }\r\n`\r\n\r\nexport const InputData = styled.div`\r\n    width: 100%;\r\n    height: 5vh;\r\n    margin-top: 3%;\r\n\r\n    button {\r\n        margin-left: 1%;\r\n    }\r\n\r\n    span {\r\n        margin-left: 4px;\r\n    }\r\n`\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {Container, From, Wrapper, TextDiv, InputData} from \"./UpdateuserStyle\"\r\nimport Axios from \"axios\"\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst UpdateWallet = ({Display}) => {\r\n  const [data, setData] = useState()\r\n  const [last, setLast] = useState(\"\")\r\n  console.log(setLast);\r\n\r\n    const url = `https://premium-crypt.onrender.com/api/alluserdata`\r\n  \r\n    useEffect(()=>{\r\n      Axios.get(url)\r\n      .then(res => setData(res.data.data))\r\n      /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n  },[])\r\n  \r\n  /* onst mydata = {...data} */\r\n  console.log(\"this is the datas i what to use\",data)\r\n    useEffect(()=>{\r\n        /* eslint-disable-next-line no-unused-expressions */\r\n        return Display\r\n        /* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n      },[])\r\n  \r\n      const upddatebtn = async(id, e) => {\r\n\r\n       \r\n        const { value: totalDeposit } = await Swal.fire(\r\n        \r\n          {\r\n          title: e.target.title,\r\n          input: 'text',\r\n          inputLabel: e.target.title,\r\n          inputValue: last,\r\n          showCancelButton: true,\r\n          inputValidator: (value) => {\r\n            if (!value) {\r\n              return 'You need to write something!'\r\n            }\r\n          }\r\n        } \r\n        )\r\n        \r\n        if (totalDeposit) {\r\n          Swal.fire(`Your LastDeposit is ${totalDeposit}`)\r\n          \r\n          let UpdateValues = e.target.title\r\n          let finalData = {UpdateValues, totalDeposit}\r\n          const sentApi = Object.values(finalData)\r\n          const myObject = {};\r\n          myObject[sentApi[0]] = sentApi[1];\r\n          console.log(myObject)\r\n          \r\n          \r\n         const lastDepositupdate = `https://preeminent-crypfield.onrender.com/api/${UpdateValues}/${id}`\r\n         Axios.patch(lastDepositupdate, myObject)\r\n          .then(res => console.log(res))\r\n           console.log(\"this is the id\", id) \r\n          console.log(totalDeposit) \r\n        }\r\n        // window.location.reload();\r\n      }\r\n\r\n  return (\r\n    <Container>\r\n        <h1>\r\n          Update User Data: \r\n        </h1>\r\n\r\n\r\n        {data? <From>\r\n         {\r\n          data?.map((props)=>(\r\n            <Wrapper>\r\n            <TextDiv>\r\n            <label>Name:</label>\r\n             <p>{props.fullName}</p>\r\n            </TextDiv>\r\n\r\n          <TextDiv>\r\n          <label>Email:</label>\r\n            <p> {props.email}</p>\r\n          </TextDiv>\r\n         \r\n          {/* <InputData>\r\n            <label>last deposit: </label>\r\n            <input type=\"text\" value={last} onChange ={(e)=>{setLast(e.target.value)}}/>\r\n              <button onClick={(e)=>upddatebtn(props._id,e)} title={\"lastDeposit\"}>update</button> \r\n              <span>${props.lastDeposit}</span>\r\n          </InputData> */}\r\n\r\n          <InputData>\r\n            <label>Last Deposit: </label>\r\n           {/*  <input/> */}\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"lastDeposit\"}>update</button>\r\n            <span>${props.lastDeposit}</span>\r\n          </InputData>\r\n\r\n          <InputData>\r\n            <label>Last Withdrawal: </label>\r\n           {/*  <input/> */}\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"lastWithdrawal\"}>update</button>\r\n            <span>${props.lastWithdrawal}</span>\r\n          </InputData>\r\n\r\n          <InputData>\r\n            <label>Deposit Wallet Balance: </label>\r\n           {/*  <input/> */}\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"depositWalletbalance\"}>update</button>\r\n            <span>${props.depositWalletbalance}</span>\r\n          </InputData>\r\n\r\n          <InputData>\r\n            <label>Interest Wallet Balance: </label>\r\n           {/*  <input/> */}\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"interestWalletbalance\"}>update</button>\r\n            <span>${props.interestWalletbalance}</span>\r\n          </InputData>\r\n\r\n          {/* <InputData>\r\n            <label>Current Balance: </label>\r\n            <input/>\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"currentBalance\"}>update</button>\r\n            <span>${props.currentBalance}</span>\r\n          </InputData> */}\r\n\r\n          <InputData>\r\n            <label>Total Deposit: </label>\r\n           {/*  <input/> */}\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"totalDeposit\"}>update</button>\r\n            <span>${props.totalDeposit}</span>\r\n          </InputData>\r\n\r\n          <InputData>\r\n            <label>Total Invest: </label>\r\n           {/*  <input/> */}\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"totalInvest\"}>update</button>\r\n            <span>${props.totalInvest}</span>\r\n          </InputData>\r\n\r\n          <InputData>\r\n            <label>Total Withdraw: </label>\r\n           {/*  <input/> */}\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"totalWithdraw\"}>update</button>\r\n            <span>${props.totalWithdraw}</span>\r\n          </InputData>\r\n\r\n          <InputData>\r\n            <label>Current balance: </label>\r\n            {/* <input/> */}\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"currentBalance\"}>Update</button>\r\n            <span>${props.currentBalance}</span>\r\n          </InputData>\r\n\r\n          {/* <InputData>\r\n            <label>Start up deposit: </label>\r\n            <input />\r\n            <button onClick={(e)=>upddatebtn(props._id,e)} title={\"startUpDeposit\"}>Update</button>\r\n            <span>${props.startUpDeposit}</span>\r\n          </InputData> */}\r\n\r\n          {/* <InputData>\r\n              <label>Total earned: </label>\r\n              <input />\r\n              <button onClick={(e)=>upddatebtn(props._id,e)} title={\"totalEarned\"}>Update</button>\r\n              <span>${props.totalEarned}</span>\r\n          </InputData> */}\r\n\r\n          </Wrapper>\r\n          ))\r\n         }\r\n        </From> : <span>Loading data....</span>}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UpdateWallet;\r\n","import React from 'react';\nimport {BrowserRouter, Routes, Route} from 'react-router-dom'\nimport AdminLogin from './Updateuser/AdminLogin';\nimport UpdateWallet from './Updateuser/Oldfile/Updateuser';\n\nconst App = () =>{\n  return(\n   <BrowserRouter>\n    <Routes>\n      <Route path='/updateuser' element={<UpdateWallet/>}/>\n      <Route path='/' element={<AdminLogin/>}/>\n    </Routes>\n   </BrowserRouter>\n  )\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}